#include "EEPROM.h"


//PIC18F系列中只有 flash，没有EEPROM，flash的操作方法是对整个扇区进行操作

//从地址为0x008000H 开始 0x008000H~0x00803FH 为一个扇区



unsigned char flash_array[SECTION_LEN] = {0};//记录用于保存到使用扇区内部的数据内容
//addr 为基准地址，bias 为偏移量，以字节为单位
void setFlashHandleAddr(unsigned int addr,unsigned  char bias)
{
	int tempAddr = 0;
	tempAddr = (addr+bias)&0x3FFFFF;
	TBLPTRU = 0;//(tempAddr&0x3F0000)>>16;
	TBLPTRH = (tempAddr&0x00FF00)>>8;
	TBLPTRL = (tempAddr&0x0000FF);
}

//-------------------------------------------------------------------------------
//	flash读程序
//-------------------------------------------------------------------------------	
unsigned char flash_readbyte(unsigned int Addr,unsigned char bias)
{
	//EEADR  = Addr;                //写入低地址
	setFlashHandleAddr(Addr,bias);
	EECON1bits.EEPGD = 1;         //0：访问EEPROM  1：访问闪存
	EECON1bits.CFGS  = 0;
	//EECON1bits.RD    = 1;
	return TABLAT;
}

//-------------------------------------------------------------------------------
//	flash写程序 需要先擦除，再写入内容 Addr为TBLPTRU<21:16> TBLPTRH<15:8> TBLPTRL<7:0>
//   其中表擦除/写针对<21:6> 表写入<5:0>  表读<21:0>
//   写操作需要连续操作64个字节,一般需要先整个扇区擦除，再写入
//   Addr 为要写入的扇区的首地址，array 为要写入扇区的内容的首地址，长度为64
//-------------------------------------------------------------------------------	
void flash_writebyte(unsigned int Addr,unsigned char *array)
{  
	unsigned char i = 0;
	ClrWdt();                     //喂狗
	//先擦除
	//EEADR  = Addr;                //写地址
	setFlashHandleAddr(Addr,0);
	EECON1bits.EEPGD = 1;         //0：访问EEPROM  1：访问闪存
	EECON1bits.CFGS  = 0;
	EECON1bits.FREE = 1;   //1：使能擦除操作  0：执行写操作
	EECON1bits.WREN = 1;          //允许写
	
	INTCONbits.GIE = 0;           //关中断
	EECON2 = 0x55;                //写入密钥
	EECON2 = 0xaa;
	EECON1bits.WR = 1;            //写操作，或者擦除操作

	INTCONbits.GIE  = 1;          //开中断
	EECON1bits.WREN = 0;          //禁止写
	while(EECON1bits.WR);         //写完成
	//再写入  需要写入整个扇区内容
	for(i=0;i<SECTION_LEN;i++)
	{
		setFlashHandleAddr(Addr,i);
		TABLAT = array[i];
	}
	//EEADR  = Addr;                //写地址
	//EEDATA = Byte;                //写数据
	EECON1bits.EEPGD = 1;         //0：访问EEPROM  1：访问闪存
	EECON1bits.CFGS  = 0;
	//EECON1bits.FREE = 0;   //1：使能擦除操作  0：执行写操作
	EECON1bits.WREN = 1;          //允许写

	INTCONbits.GIE = 0;           //关中断
	EECON2 = 0x55;                //写入密钥
	EECON2 = 0xaa;
	EECON1bits.WR = 1;            //写操作，或者擦除操作

	INTCONbits.GIE  = 1;          //开中断
	EECON1bits.WREN = 0;          //禁止写
	while(EECON1bits.WR);         //写完成
}
